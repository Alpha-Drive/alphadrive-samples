* What is Alpha Drive

Visit http://alphadrive.ai for more information.

* Prerequisites

- nodejs 10.0 or later
- npm install -g @alphadrive/cli
- register at https://app.alphadrive.ai

* Optional
- Docker CE (required for Mac)

* Support Matrix

| Agent Execution Environment                    | Ubuntu | Windows 10 | MacOS |
|------------------------------------------------+--------+------------+-------|
| Remote Execution of Docker Containers With GPU | Yes    | Yes        | Yes   |
| Local Execution of Docker Containers (No GPU)  | Yes    | Yes        | Yes   |
| Local Execution of GPU-Enabled Containers      | Yes    | No         | No    |
| Native agent with GPU                          | Yes    | Yes        | No    |

* Running Samples on Windows 10
- install conda - https://docs.conda.io/en/latest/miniconda.html
- launch the conda command prompt
- create environment: conda create --name ad-samples python=3.7 numpy scipy
- conda activate ad-samples
- run: post-install.bat

For docker profiles, run "docker pull alphadrive/samples:latest" on the command prompt.

** Profiles
All defined profiles run on Windows except docker_manual, docker_pwd, manual, and mapview. Use manual_win and mapview_win. The docker profiles require X11 and GPU support.

* Running Samples on Ubuntu
** Setup
- install conda - https://docs.conda.io/en/latest/miniconda.html
- launch a terminal
- create environment: conda create --name ad-samples python=3.5 numpy scipy
- conda activate ad-samples
- run: post-install.sh

For docker profiles, run "docker pull alphadrive/samples:latest" on the command prompt.

** Profiles
All defined profiles run on Ubuntu except manual_win and mapview_win

* Running Samples on MacOS
Run "docker pull alphadrive/samples:latest" on the command prompt.

** Profiles
Since there is neither NVidia GPU support nor a Carla client library available for MacOS, only non-gpu docker container agents are supported.

Available profiles:
- docker, docker_manual

** Notes on docker_manual profile:
The docker_manual profile runs the manual_control.py demo which visualizes the agent's sensors in a pygame window.

A local installation of XQuartz is required with "Allow connections from network clients" set to YES. You can set this via the menu Preferences>Security or run the following command in the shell:

#+begin_src
defaults write org.macosforge.xquartz.X11.plist nolisten_tcp 0
#+end_src

The "use_gpu" flag is ignored since no GPU is available.
